{"ast":null,"code":"var _jsxFileName = \"/home/giang/Programming/AI/disloDetect/dislodetect_fe/src/components/InputSlider.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction InputSlider(props) {\n  _s();\n  const {\n    iptText,\n    iptId,\n    sldId,\n    iptStep,\n    sldStep,\n    dftValue\n  } = props;\n  const [value, setValue] = useState(parseFloat(dftValue));\n  const updateSlider = e => {\n    setValue(e.target.value);\n  };\n  const updateInput = e => {\n    const iptVal = e.target.value;\n    if (!isNaN(iptVal) && iptVal >= 0 && iptVal <= 1) {\n      setValue(Number(iptVal));\n    }\n  };\n  console.log(`iptText ${iptText}`);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      for: iptId,\n      style: {\n        justifySelf: \"left\",\n        marginRight\n      },\n      children: iptText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      id: iptId,\n      min: \"0\",\n      max: \"1\",\n      step: iptStep,\n      value: value,\n      disabled: false,\n      onChange: updateSlider\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      for: sldId,\n      children: \"0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"range\",\n      min: \"0\",\n      max: \"1\",\n      step: sldStep,\n      value: value,\n      disabled: false,\n      onChange: updateInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      for: sldId,\n      children: \"1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s(InputSlider, \"ZJFgGIPgRFg/h5TPm3ZHzhhHSAw=\");\n_c = InputSlider;\nexport default InputSlider;\nvar _c;\n$RefreshReg$(_c, \"InputSlider\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","InputSlider","props","_s","iptText","iptId","sldId","iptStep","sldStep","dftValue","value","setValue","parseFloat","updateSlider","e","target","updateInput","iptVal","isNaN","Number","console","log","children","for","style","justifySelf","marginRight","fileName","_jsxFileName","lineNumber","columnNumber","type","id","min","max","step","disabled","onChange","_c","$RefreshReg$"],"sources":["/home/giang/Programming/AI/disloDetect/dislodetect_fe/src/components/InputSlider.js"],"sourcesContent":["import { useState } from \"react\";\nfunction InputSlider(props) {\n  const { iptText, iptId, sldId, iptStep, sldStep, dftValue } = props;\n  const [value, setValue] = useState(parseFloat(dftValue));\n  const updateSlider = (e) => {\n    setValue(e.target.value);\n  };\n  const updateInput = (e) => {\n    const iptVal = e.target.value;\n    if (!isNaN(iptVal) && iptVal >= 0 && iptVal <= 1) {\n      setValue(Number(iptVal));\n    }\n  };\n  console.log(`iptText ${iptText}`);\n\n  return (\n    <div>\n      <label for={iptId} style={{ justifySelf: \"left\", marginRight }}>{iptText}</label>\n      <input\n        type=\"number\"\n        id={iptId}\n        min=\"0\"\n        max=\"1\"\n        step={iptStep}\n        value={value}\n        disabled={false}\n        onChange={updateSlider}\n      />\n      <label for={sldId}>0</label>\n      <input\n        type=\"range\"\n        min=\"0\"\n        max=\"1\"\n        step={sldStep}\n        value={value}\n        disabled={false}\n        onChange={updateInput}\n      />\n      <label for={sldId}>1</label>\n    </div>\n  );\n}\n\nexport default InputSlider;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACjC,SAASC,WAAWA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAC1B,MAAM;IAAEC,OAAO;IAAEC,KAAK;IAAEC,KAAK;IAAEC,OAAO;IAAEC,OAAO;IAAEC;EAAS,CAAC,GAAGP,KAAK;EACnE,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAACc,UAAU,CAACH,QAAQ,CAAC,CAAC;EACxD,MAAMI,YAAY,GAAIC,CAAC,IAAK;IAC1BH,QAAQ,CAACG,CAAC,CAACC,MAAM,CAACL,KAAK,CAAC;EAC1B,CAAC;EACD,MAAMM,WAAW,GAAIF,CAAC,IAAK;IACzB,MAAMG,MAAM,GAAGH,CAAC,CAACC,MAAM,CAACL,KAAK;IAC7B,IAAI,CAACQ,KAAK,CAACD,MAAM,CAAC,IAAIA,MAAM,IAAI,CAAC,IAAIA,MAAM,IAAI,CAAC,EAAE;MAChDN,QAAQ,CAACQ,MAAM,CAACF,MAAM,CAAC,CAAC;IAC1B;EACF,CAAC;EACDG,OAAO,CAACC,GAAG,CAAC,WAAWjB,OAAO,EAAE,CAAC;EAEjC,oBACEJ,OAAA;IAAAsB,QAAA,gBACEtB,OAAA;MAAOuB,GAAG,EAAElB,KAAM;MAACmB,KAAK,EAAE;QAAEC,WAAW,EAAE,MAAM;QAAEC;MAAY,CAAE;MAAAJ,QAAA,EAAElB;IAAO;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACjF9B,OAAA;MACE+B,IAAI,EAAC,QAAQ;MACbC,EAAE,EAAE3B,KAAM;MACV4B,GAAG,EAAC,GAAG;MACPC,GAAG,EAAC,GAAG;MACPC,IAAI,EAAE5B,OAAQ;MACdG,KAAK,EAAEA,KAAM;MACb0B,QAAQ,EAAE,KAAM;MAChBC,QAAQ,EAAExB;IAAa;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC,eACF9B,OAAA;MAAOuB,GAAG,EAAEjB,KAAM;MAAAgB,QAAA,EAAC;IAAC;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAC5B9B,OAAA;MACE+B,IAAI,EAAC,OAAO;MACZE,GAAG,EAAC,GAAG;MACPC,GAAG,EAAC,GAAG;MACPC,IAAI,EAAE3B,OAAQ;MACdE,KAAK,EAAEA,KAAM;MACb0B,QAAQ,EAAE,KAAM;MAChBC,QAAQ,EAAErB;IAAY;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB,CAAC,eACF9B,OAAA;MAAOuB,GAAG,EAAEjB,KAAM;MAAAgB,QAAA,EAAC;IAAC;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzB,CAAC;AAEV;AAAC3B,EAAA,CAxCQF,WAAW;AAAAqC,EAAA,GAAXrC,WAAW;AA0CpB,eAAeA,WAAW;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}