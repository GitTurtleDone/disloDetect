{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nexport function useRemoveOldBB() {\n  _s();\n  const [shouldRemoveOldBB, setShouldRemoveOldBB] = useState(false);\n  const removeOldBB = () => {\n    setShouldRemoveOldBB(true);\n  };\n  useEffect(() => {\n    if (shouldRemoveOldBB) {}\n  }, [shouldRemoveOldBB]);\n  console.log(`went in removeOldBB`);\n  // return \"Ok\";\n}\n_s(useRemoveOldBB, \"wmdHMMaPo/H8Kb+W6i4k6wCq1D0=\");","map":{"version":3,"names":["useState","useEffect","useRemoveOldBB","_s","shouldRemoveOldBB","setShouldRemoveOldBB","removeOldBB","console","log"],"sources":["/home/giang/Programming/AI/disloDetect/dislodetect_fe/src/hooks/useRemoveOldBB.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nexport function useRemoveOldBB() {\n  const [shouldRemoveOldBB, setShouldRemoveOldBB] = useState(false);\n  const removeOldBB = () => {\n    setShouldRemoveOldBB(true);\n  }\n  useEffect(()=>{\n    if (shouldRemoveOldBB) {\n\n    }\n  }, [shouldRemoveOldBB]\n\n  )\n  \n  console.log(`went in removeOldBB`);\n  // return \"Ok\";\n}\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAO,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EAC/B,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC;EACjE,MAAMM,WAAW,GAAGA,CAAA,KAAM;IACxBD,oBAAoB,CAAC,IAAI,CAAC;EAC5B,CAAC;EACDJ,SAAS,CAAC,MAAI;IACZ,IAAIG,iBAAiB,EAAE,CAEvB;EACF,CAAC,EAAE,CAACA,iBAAiB,CAErB,CAAC;EAEDG,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;EAClC;AACF;AAACL,EAAA,CAfeD,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}