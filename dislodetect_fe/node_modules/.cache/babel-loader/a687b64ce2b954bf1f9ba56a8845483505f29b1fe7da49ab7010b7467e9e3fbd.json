{"ast":null,"code":"var _jsxFileName = \"/home/giang/Programming/AI/disloDetect/dislodetect_fe/src/components/InputSlider.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction InputSlider(props) {\n  _s();\n  const {\n    iptText,\n    iptId,\n    sldId,\n    iptStep,\n    sldStep,\n    dftValue,\n    updateValue\n  } = props;\n  const [value, setValue] = useState(parseFloat(dftValue));\n  const [finalValue, setFinalValue] = useState(parseFloat(dftValue));\n  const updateSlider = e => {\n    setValue(e.target.value);\n    // updateValue(e.target.value);\n  };\n  const updateInput = e => {\n    const iptVal = e.target.value;\n    if (!isNaN(iptVal) && iptVal >= 0 && iptVal <= 1) {\n      setValue(Number(iptVal));\n    }\n    // updateValue(iptVal);\n  };\n\n  //  below used is for updating the slider and input in 500 ms intervals \n  //  using deboucing value as the final ones\n  useEffect(() => {\n    const hdlTimeout = setTimeout(() => {\n      setFinalValue(value);\n      updateValue(value);\n    }, 500);\n    return () => {\n      clearTimeout(hdlTimeout);\n    };\n  }, [value]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"grid\",\n      gridTemplateColumns: \"100px 60px 20px 150px 20px\",\n      justifyContent: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      for: iptId,\n      style: {\n        justifySelf: \"left\",\n        marginRight: \"10px\",\n        textAlign: \"left\"\n      },\n      children: iptText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      id: iptId,\n      min: \"0\",\n      max: \"1\",\n      step: iptStep,\n      value: value,\n      disabled: false,\n      onChange: updateSlider\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      for: sldId,\n      style: {\n        marginLeft: \"8px\",\n        marginRight: \"2px\"\n      },\n      children: \"0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"range\",\n      min: \"0\",\n      max: \"1\",\n      step: sldStep,\n      value: value,\n      disabled: false,\n      onChange: updateInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      for: sldId,\n      children: \"1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(InputSlider, \"y+iR/s+BkXn2JZD5NsaLxvVFMWw=\");\n_c = InputSlider;\nexport default InputSlider;\nvar _c;\n$RefreshReg$(_c, \"InputSlider\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","InputSlider","props","_s","iptText","iptId","sldId","iptStep","sldStep","dftValue","updateValue","value","setValue","parseFloat","finalValue","setFinalValue","updateSlider","e","target","updateInput","iptVal","isNaN","Number","hdlTimeout","setTimeout","clearTimeout","style","display","gridTemplateColumns","justifyContent","children","for","justifySelf","marginRight","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","type","id","min","max","step","disabled","onChange","marginLeft","_c","$RefreshReg$"],"sources":["/home/giang/Programming/AI/disloDetect/dislodetect_fe/src/components/InputSlider.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nfunction InputSlider(props) {\n  const { iptText, iptId, sldId, iptStep, sldStep, dftValue, updateValue } = props;\n  const [value, setValue] = useState(parseFloat(dftValue));\n  const [finalValue, setFinalValue] = useState(parseFloat(dftValue));\n  const updateSlider = (e) => {\n    setValue(e.target.value);\n    // updateValue(e.target.value);\n  };\n  const updateInput = (e) => {\n    const iptVal = e.target.value;\n    if (!isNaN(iptVal) && iptVal >= 0 && iptVal <= 1) {\n      setValue(Number(iptVal));\n    }\n    // updateValue(iptVal);\n  };\n\n  //  below used is for updating the slider and input in 500 ms intervals \n  //  using deboucing value as the final ones\n  useEffect(()=>{\n    const hdlTimeout = setTimeout(() =>{\n      setFinalValue(value);\n      updateValue(value);\n    }, 500);\n    return () => {\n      clearTimeout(hdlTimeout);\n    };\n  }, [value]);\n  return (\n    <div\n      style={{\n        display: \"grid\",\n        gridTemplateColumns: \"100px 60px 20px 150px 20px\",\n        justifyContent: \"center\",\n      }}\n    >\n      <label\n        for={iptId}\n        style={{ justifySelf: \"left\", marginRight: \"10px\", textAlign: \"left\" }}\n      >\n        {iptText}\n      </label>\n      <input\n        type=\"number\"\n        id={iptId}\n        min=\"0\"\n        max=\"1\"\n        step={iptStep}\n        value={value}\n        disabled={false}\n        onChange={updateSlider}\n      />\n      <label for={sldId} style={{ marginLeft: \"8px\", marginRight: \"2px\" }}>\n        0\n      </label>\n      <input\n        type=\"range\"\n        min=\"0\"\n        max=\"1\"\n        step={sldStep}\n        value={value}\n        disabled={false}\n        onChange={updateInput}\n      />\n      <label for={sldId}>1</label>\n    </div>\n  );\n}\n\nexport default InputSlider;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}