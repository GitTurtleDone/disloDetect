{"ast":null,"code":"var _jsxFileName = \"/home/giang/Programming/AI/disloDetect/dislodetect_fe/src/components/InputSlider.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction InputSlider(props) {\n  _s();\n  const {\n    iptId,\n    sldId,\n    iptStep,\n    sldStep,\n    dftValue\n  } = props;\n  const [value, setValue] = useState(parseFloat(dftValue));\n  const updateSlider = e => {\n    setValue(e.target.value);\n  };\n  const updateInput = () => {\n    const slider = document.getElementById({\n      sldId\n    });\n    const input = document.getElementById({\n      iptId\n    });\n    // const newValue = parseFloat(slider.value).toFixed(3);\n    // const input = document.getElementById({ iptId });\n    // input.value = newValue;\n    // predict();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      for: iptId,\n      style: {\n        justifySelf: \"left\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      id: iptId,\n      min: \"0\",\n      max: \"1\",\n      step: iptStep,\n      value: dftValue,\n      onChange: updateSlider\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      for: sldId,\n      children: \"0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"range\",\n      min: \"0\",\n      max: \"1\",\n      step: sldStep,\n      value: dftValue,\n      onChange: updateInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      for: sldId,\n      children: \"1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(InputSlider, \"ZJFgGIPgRFg/h5TPm3ZHzhhHSAw=\");\n_c = InputSlider;\nexport default InputSlider;\nvar _c;\n$RefreshReg$(_c, \"InputSlider\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","InputSlider","props","_s","iptId","sldId","iptStep","sldStep","dftValue","value","setValue","parseFloat","updateSlider","e","target","updateInput","slider","document","getElementById","input","children","for","style","justifySelf","fileName","_jsxFileName","lineNumber","columnNumber","type","id","min","max","step","onChange","_c","$RefreshReg$"],"sources":["/home/giang/Programming/AI/disloDetect/dislodetect_fe/src/components/InputSlider.js"],"sourcesContent":["import { useState } from \"react\";\nfunction InputSlider(props) {\n  const { iptId, sldId, iptStep, sldStep, dftValue } = props;\n  const [value, setValue] = useState(parseFloat(dftValue));\n  const updateSlider = (e) => {\n    setValue(e.target.value)\n  };\n  const updateInput = () => {\n    const slider = document.getElementById({ sldId });\n    const input = document.getElementById({ iptId });\n    // const newValue = parseFloat(slider.value).toFixed(3);\n    // const input = document.getElementById({ iptId });\n    // input.value = newValue;\n    // predict();\n  };\n\n  return (\n    <div>\n      <label for={iptId} style={{ justifySelf: \"left\" }}></label>\n      <input\n        type=\"number\"\n        id={iptId}\n        min=\"0\"\n        max=\"1\"\n        step={iptStep}\n        value={dftValue}\n        onChange={updateSlider}\n      />\n      <label for={sldId}>0</label>\n      <input\n        type=\"range\"\n        min=\"0\"\n        max=\"1\"\n        step={sldStep}\n        value={dftValue}\n        onChange={updateInput}\n      />\n      <label for={sldId}>1</label>\n    </div>\n  );\n}\n\nexport default InputSlider;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACjC,SAASC,WAAWA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAC1B,MAAM;IAAEC,KAAK;IAAEC,KAAK;IAAEC,OAAO;IAAEC,OAAO;IAAEC;EAAS,CAAC,GAAGN,KAAK;EAC1D,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAACa,UAAU,CAACH,QAAQ,CAAC,CAAC;EACxD,MAAMI,YAAY,GAAIC,CAAC,IAAK;IAC1BH,QAAQ,CAACG,CAAC,CAACC,MAAM,CAACL,KAAK,CAAC;EAC1B,CAAC;EACD,MAAMM,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMC,MAAM,GAAGC,QAAQ,CAACC,cAAc,CAAC;MAAEb;IAAM,CAAC,CAAC;IACjD,MAAMc,KAAK,GAAGF,QAAQ,CAACC,cAAc,CAAC;MAAEd;IAAM,CAAC,CAAC;IAChD;IACA;IACA;IACA;EACF,CAAC;EAED,oBACEJ,OAAA;IAAAoB,QAAA,gBACEpB,OAAA;MAAOqB,GAAG,EAAEjB,KAAM;MAACkB,KAAK,EAAE;QAAEC,WAAW,EAAE;MAAO;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC3D3B,OAAA;MACE4B,IAAI,EAAC,QAAQ;MACbC,EAAE,EAAEzB,KAAM;MACV0B,GAAG,EAAC,GAAG;MACPC,GAAG,EAAC,GAAG;MACPC,IAAI,EAAE1B,OAAQ;MACdG,KAAK,EAAED,QAAS;MAChByB,QAAQ,EAAErB;IAAa;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC,eACF3B,OAAA;MAAOqB,GAAG,EAAEhB,KAAM;MAAAe,QAAA,EAAC;IAAC;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAC5B3B,OAAA;MACE4B,IAAI,EAAC,OAAO;MACZE,GAAG,EAAC,GAAG;MACPC,GAAG,EAAC,GAAG;MACPC,IAAI,EAAEzB,OAAQ;MACdE,KAAK,EAAED,QAAS;MAChByB,QAAQ,EAAElB;IAAY;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB,CAAC,eACF3B,OAAA;MAAOqB,GAAG,EAAEhB,KAAM;MAAAe,QAAA,EAAC;IAAC;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzB,CAAC;AAEV;AAACxB,EAAA,CAvCQF,WAAW;AAAAiC,EAAA,GAAXjC,WAAW;AAyCpB,eAAeA,WAAW;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}