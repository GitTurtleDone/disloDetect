{"ast":null,"code":"var _jsxFileName = \"/home/giang/Programming/AI/disloDetect/dislodetect_fe/src/App.js\",\n  _s = $RefreshSig$();\n// import logo from './logo.svg';\nimport \"./App.css\";\nimport { useState } from \"react\";\nimport React, { useRef } from \"react\";\nimport UploadPhotoFile from \"./components/UploadPhotoFile\";\nimport Predict from \"./components/PredictButton\";\nimport { useRemoveOldBB } from \"./hooks/useRemoveOldBB\";\nimport CustomOutput from \"./components/CustomOutput\";\nimport Katex from 'katex';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [photoFileSource, setPhotoFileSource] = useState();\n  const [photoFile, setPhotoFile] = useState();\n  const [sumBhi, setSumBhi] = useState(3.46);\n  const imgContainerRef = useRef(null); // reference to the photo element\n  const labelText = `k_{n+1} = n^2 + k_n^2 - k_{n-1} Calculated dislocation density \\\\sum &#961`;\n  const myFormula = `k_{n+1} = n^2 + k_n^2 - k_{n-1}`;\n  const updatePhotoFileSource = source => {\n    setPhotoFileSource(source);\n  };\n  const updateSumBhi = data => {\n    setSumBhi(data);\n  };\n  const updatePhotoFile = photoFile => {\n    setPhotoFile(photoFile);\n  };\n  // const imagePath = \"../../Public/SavedImages/Ref03_Fig4b_Rot45.jpg\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dislocation Detection\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"image-container\",\n      ref: imgContainerRef,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: photoFileSource,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UploadPhotoFile, {\n      updatePhotoFileSource: updatePhotoFileSource\n      // triggerRemoveOldBB={triggerRemoveOldBB}\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Predict, {\n      imgContainerRef: imgContainerRef,\n      photo: photoFile,\n      updateSumBhi: updateSumBhi\n      // triggerRemoveOldBB={triggerRemoveOldBB}\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Inline: \", Katex.renderToString(inlineFormula)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CustomOutput, {\n      labelText: labelText,\n      inputID: \"optBhi\",\n      inputAccuracy: \"1e-2\",\n      defaultValue: \"3.46\",\n      hasInfoIcon: \"false\",\n      infoImage: \"./\",\n      allowChange: \"false\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"TWKs9BuMlpo6XYke+CdnOkOVXco=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","React","useRef","UploadPhotoFile","Predict","useRemoveOldBB","CustomOutput","Katex","jsxDEV","_jsxDEV","App","_s","photoFileSource","setPhotoFileSource","photoFile","setPhotoFile","sumBhi","setSumBhi","imgContainerRef","labelText","myFormula","updatePhotoFileSource","source","updateSumBhi","data","updatePhotoFile","children","fileName","_jsxFileName","lineNumber","columnNumber","id","ref","src","alt","photo","renderToString","inlineFormula","inputID","inputAccuracy","defaultValue","hasInfoIcon","infoImage","allowChange","_c","$RefreshReg$"],"sources":["/home/giang/Programming/AI/disloDetect/dislodetect_fe/src/App.js"],"sourcesContent":["// import logo from './logo.svg';\nimport \"./App.css\";\nimport { useState } from \"react\";\nimport React, { useRef } from \"react\";\nimport UploadPhotoFile from \"./components/UploadPhotoFile\";\nimport Predict from \"./components/PredictButton\";\nimport { useRemoveOldBB } from \"./hooks/useRemoveOldBB\";\nimport CustomOutput from \"./components/CustomOutput\";\nimport Katex from 'katex';\n\nfunction App() {\n  const [photoFileSource, setPhotoFileSource] = useState();\n  const [photoFile, setPhotoFile] = useState();\n  const [sumBhi, setSumBhi] = useState(3.46);\n  const imgContainerRef = useRef(null); // reference to the photo element\n  const labelText = `k_{n+1} = n^2 + k_n^2 - k_{n-1} Calculated dislocation density \\\\sum &#961`;\n  const myFormula = `k_{n+1} = n^2 + k_n^2 - k_{n-1}`;\n  const updatePhotoFileSource = (source) => {\n    setPhotoFileSource(source);\n  };\n\n  const updateSumBhi = (data) => {\n    setSumBhi(data);\n  };\n\n  const updatePhotoFile = (photoFile) => {\n    setPhotoFile(photoFile);\n  };\n  // const imagePath = \"../../Public/SavedImages/Ref03_Fig4b_Rot45.jpg\";\n  return (\n    <div>\n      <h1>Dislocation Detection</h1>\n      <div id=\"image-container\" ref={imgContainerRef}>\n        <img src={photoFileSource} alt=\"\" />\n      </div>\n      <UploadPhotoFile\n        updatePhotoFileSource={updatePhotoFileSource}\n        // triggerRemoveOldBB={triggerRemoveOldBB}\n      />\n      <Predict\n        imgContainerRef={imgContainerRef}\n        photo={photoFile}\n        updateSumBhi={updateSumBhi}\n        // triggerRemoveOldBB={triggerRemoveOldBB}\n      />\n      <p>Inline: {Katex.renderToString(inlineFormula)}</p>\n      <CustomOutput\n        labelText= {labelText}\n        inputID=\"optBhi\"\n        inputAccuracy=\"1e-2\"\n        defaultValue=\"3.46\"\n        hasInfoIcon=\"false\"\n        infoImage=\"./\"\n        allowChange=\"false\"\n      />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}