{"ast":null,"code":"var _jsxFileName = \"/home/giang/Programming/AI/disloDetect/dislodetect_fe/src/components/PredictButton.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios, { AxiosResponse } from \"axios\";\nimport \"../App.css\";\nimport { useRemoveOldBB } from \"../hooks/useRemoveOldBB.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Predict(props) {\n  _s();\n  useRemoveOldBB();\n  const {\n    imgContainerRef,\n    photo,\n    updateSumBhi\n  } = props;\n  const predictBB = async () => {\n    const formData = new FormData();\n    formData.append(\"file\", photo);\n    try {\n      const response = await axios.post(\"http://localhost:5226/Predict\", formData);\n      let results = response.data;\n      console.log(\"Data received: \", results);\n      let formattedResults = formatResults(results);\n      console.log(`Formatted results: \\n`, formattedResults);\n      processBB(formattedResults, imgContainerRef);\n    } catch (error) {\n      console.log(\"Error why predicting: \", error);\n    }\n  };\n  function formatResults(results) {\n    let bboxes = [];\n    let imageWidth = results[\"image\"][\"width\"];\n    let imageHeight = results[\"image\"][\"height\"];\n    results[\"predictions\"].forEach(bb => {\n      console.log(bb);\n      bboxes.push([bb[\"x\"] / imageWidth * 100, bb[\"y\"] / imageHeight * 100, bb[\"width\"] / imageWidth * 100, bb[\"height\"] / imageHeight * 100, bb[\"confidence\"]]);\n    });\n    return [results[\"image\"][\"width\"], results[\"image\"][\"height\"], bboxes];\n  }\n  const bbColors = [\"red\"];\n  function processBB(formattedResults, imgContainerRef) {\n    // remove all the bounding boxes in the previous frames\n\n    let bboxes = formattedResults[2];\n    let SumBhi = 0;\n    console.log(`bboxes: `, bboxes);\n    let bbColor = \"DarkRed\"; // assign a dummy bounding box border colors\n    const imgContainer = imgContainerRef.current;\n    if (bboxes.length > 0) {\n      for (let i = 0; i < bboxes.length; i++) {\n        // drawing bounding boxes around the detected objects\n        const htmlBoundingBox = document.createElement(\"div\");\n        htmlBoundingBox.className = \"bounding-box\";\n        imgContainer.appendChild(htmlBoundingBox);\n        // console.log(\"bbColor Index\", bboxes[0][i]);\n        htmlBoundingBox.style.left = `${bboxes[i][0] - bboxes[i][2] / 2}%`;\n        htmlBoundingBox.style.top = `${bboxes[i][1] - bboxes[i][3] / 2}%`;\n        htmlBoundingBox.style.width = `${bboxes[i][2]}%`;\n        htmlBoundingBox.style.height = `${bboxes[i][3]}%`;\n        htmlBoundingBox.style.borderColor = bbColor;\n        SumBhi += bboxes[i][3] / 100;\n        // drawing bounding boxes around the detected objects\n      }\n    }\n    updateSumBhi(SumBhi);\n    console.log(`Sum of bhi: `, parseFloat(SumBhi).toFixed(2));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: predictBB,\n      children: \"Predict (roboflow)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_s(Predict, \"YTkye8TFsuLP41Q7Y2QXR9LPot8=\", false, function () {\n  return [useRemoveOldBB];\n});\n_c = Predict;\nexport default Predict;\nvar _c;\n$RefreshReg$(_c, \"Predict\");","map":{"version":3,"names":["React","useState","axios","AxiosResponse","useRemoveOldBB","jsxDEV","_jsxDEV","Predict","props","_s","imgContainerRef","photo","updateSumBhi","predictBB","formData","FormData","append","response","post","results","data","console","log","formattedResults","formatResults","processBB","error","bboxes","imageWidth","imageHeight","forEach","bb","push","bbColors","SumBhi","bbColor","imgContainer","current","length","i","htmlBoundingBox","document","createElement","className","appendChild","style","left","top","width","height","borderColor","parseFloat","toFixed","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/giang/Programming/AI/disloDetect/dislodetect_fe/src/components/PredictButton.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios, { AxiosResponse } from \"axios\";\nimport \"../App.css\";\nimport { useRemoveOldBB } from \"../hooks/useRemoveOldBB.js\";\n\nfunction Predict(props) {\n  useRemoveOldBB();\n  const { imgContainerRef, photo, updateSumBhi } = props;\n  const predictBB = async () => {\n    const formData = new FormData();\n    formData.append(\"file\", photo);\n    try {\n      const response = await axios.post(\n        \"http://localhost:5226/Predict\",\n        formData\n      );\n      let results = response.data;\n      console.log(\"Data received: \", results);\n      let formattedResults = formatResults(results);\n      console.log(`Formatted results: \\n`, formattedResults);\n      processBB(formattedResults, imgContainerRef);\n    } catch (error) {\n      console.log(\"Error why predicting: \", error);\n    }\n  };\n\n  function formatResults(results) {\n    let bboxes = [];\n    let imageWidth = results[\"image\"][\"width\"];\n    let imageHeight = results[\"image\"][\"height\"];\n    results[\"predictions\"].forEach((bb) => {\n      console.log(bb);\n      bboxes.push([\n        (bb[\"x\"] / imageWidth) * 100,\n        (bb[\"y\"] / imageHeight) * 100,\n        (bb[\"width\"] / imageWidth) * 100,\n        (bb[\"height\"] / imageHeight) * 100,\n        bb[\"confidence\"],\n      ]);\n    });\n    return [results[\"image\"][\"width\"], results[\"image\"][\"height\"], bboxes];\n  }\n\n  const bbColors = [\"red\"];\n  function processBB(formattedResults, imgContainerRef) {\n    // remove all the bounding boxes in the previous frames\n\n    let bboxes = formattedResults[2];\n    let SumBhi = 0;\n    console.log(`bboxes: `, bboxes);\n\n    let bbColor = \"DarkRed\"; // assign a dummy bounding box border colors\n    const imgContainer = imgContainerRef.current;\n\n    if (bboxes.length > 0) {\n      for (let i = 0; i < bboxes.length; i++) {\n        // drawing bounding boxes around the detected objects\n        const htmlBoundingBox = document.createElement(\"div\");\n        htmlBoundingBox.className = \"bounding-box\";\n        imgContainer.appendChild(htmlBoundingBox);\n        // console.log(\"bbColor Index\", bboxes[0][i]);\n        htmlBoundingBox.style.left = `${bboxes[i][0] - bboxes[i][2] / 2}%`;\n        htmlBoundingBox.style.top = `${bboxes[i][1] - bboxes[i][3] / 2}%`;\n        htmlBoundingBox.style.width = `${bboxes[i][2]}%`;\n        htmlBoundingBox.style.height = `${bboxes[i][3]}%`;\n        htmlBoundingBox.style.borderColor = bbColor;\n        SumBhi += bboxes[i][3] / 100;\n        // drawing bounding boxes around the detected objects\n      }\n    }\n    updateSumBhi(SumBhi);\n    console.log(`Sum of bhi: `, parseFloat(SumBhi).toFixed(2));\n  }\n\n  return (\n    <div>\n      <button onClick={predictBB}>Predict (roboflow)</button>\n    </div>\n  );\n}\n\nexport default Predict;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}